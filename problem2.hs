-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

fibsLessThan n = fib [1, 0]
	where fib whole@(cur:prev:rest)
			| cur > n = prev:rest
			| otherwise = fib ((cur + prev):whole)
answer = sum (filter even (fibsLessThan 4000000))

-- Later came across http://www.haskell.org/haskellwiki/The_Fibonacci_sequence
-- Look at this beauty, which I don't quite understand yet.
fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
-- Taking that as a given...
answer' = sum (filter even (takeWhile (<4000000) fibs))